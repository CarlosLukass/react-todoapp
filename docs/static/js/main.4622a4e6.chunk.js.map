{"version":3,"sources":["hoc/todoReducerContext.js","components/header/HeaderToDo.jsx","components/tasks/TaskItem.jsx","components/tasks/AddNewTask.jsx","hooks/useForm.jsx","components/tasks/TasksList.jsx","reducers/todoReducer.js","TodoApp.jsx","index.js"],"names":["todoReducerContext","createContext","require","HeaderToDo","state","useContext","className","src","alt","length","TaskItem","React","memo","task","dispatch","id","name","category","handleRemoveTask","useCallback","type","payload","role","aria-label","onClick","AddNewTask","initialState","useState","formValue","setState","handleInputChange","input","target","value","resetInput","useForm","status","handleAddTask","action","Date","getTime","trigger","modal","closeOnDocumentClick","close","onSubmit","placeholder","autoComplete","onChange","e","preventDefault","TasksList","map","key","todoReducer","console","log","todo","filter","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","useEffect","setItem","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4622a4e6.chunk.js","sourcesContent":["const { createContext } = require(\"react\");\r\n\r\nexport const todoReducerContext = createContext(null)","import React, { useContext } from \"react\";\r\nimport { todoReducerContext } from \"../../hoc/todoReducerContext\";\r\n\r\nexport const HeaderToDo = () => {\r\n  const { state } = useContext(todoReducerContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container mt-3\">\r\n\r\n        <div className=\"d-flex flex-row align-items-center justify-content-between\">\r\n          <img src=\"./assets/menu.png\" alt=\"\" className=\"btn-menu\" />\r\n          <p className=\"welcome-user\"> Todo App </p>\r\n          <div className=\"item\">\r\n          <span className=\"notify-badge\">1</span>\r\n          <img src=\"./assets/avatar.jpg\" alt=\"\" className=\"avatar\" />\r\n          </div>\r\n        </div>\r\n\r\n        <h1 className=\"task-title\">Shopping</h1>\r\n      </div>\r\n\r\n      <div className=\"container  status-todo\">\r\n        <div className=\"status m-0\">\r\n          {state.length >= 1 ? (\r\n            <span className=\"badge badge-pill badge-primary\">\r\n              {state.length}\r\n            </span>\r\n          ) : (\r\n            <span></span>\r\n          )}\r\n          <span className=\"status-active\">Pending</span>\r\n        </div>\r\n\r\n        {/* <div className=\"status\">\r\n          <span className=\"badge badge-pill badge-primary\">3</span>\r\n          <span>Complete</span>\r\n        </div>\r\n\r\n        <div className=\"status\">\r\n          <span>Notes</span>\r\n        </div> */}\r\n      </div>\r\n\r\n      <hr />\r\n    </>\r\n  );\r\n};\r\n","import React,{useCallback} from \"react\";\r\n\r\nexport const TaskItem = React.memo(({task, dispatch}) => {\r\n  const {id, task:name, category} = task\r\n\r\n  const handleRemoveTask = useCallback(() => {\r\n    const action = {\r\n      type: 'delete',\r\n      payload: id\r\n    } \r\n    dispatch(action)\r\n  }, [id, dispatch])\r\n\r\n  return (\r\n    <>\r\n    {\r\n      (category === 'important')\r\n      ? // Category: Important Task\r\n      <li className=\"list-group-item d-flex align-items-center\">\r\n      <span className=\"p-0 mr-1\" role=\"img\" aria-label=\"trash\">‚≠ê</span>\r\n      <p className=\"m-0 p-0 important-task\">{name}</p>\r\n      <button className=\"btn-delete ml-auto p-0\" onClick={handleRemoveTask}> <span role=\"img\" aria-label=\"trash\">üóëÔ∏è</span> </button>\r\n      </li>\r\n      : // Category: Normal Task\r\n      <li className=\"list-group-item d-flex align-items-center justify-content-between\">\r\n      <p className=\"m-0\">{name}</p>\r\n      <button className=\"btn-delete\" onClick={handleRemoveTask}> <span role=\"img\" aria-label=\"trash\">üóëÔ∏è</span> </button>\r\n      </li>\r\n    }\r\n\r\n    </>\r\n  );\r\n})\r\n","import React, { useContext } from \"react\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { todoReducerContext } from \"../../hoc/todoReducerContext\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport const AddNewTask = React.memo(() => {\r\n  const { dispatch } = useContext(todoReducerContext);\r\n\r\n  const [formValue, handleInputChange, resetInput] = useForm({\r\n    id: \"\",\r\n    task: \"\",\r\n    status: \"\",\r\n    category: \"\",\r\n  });\r\n\r\n  const handleAddTask = useCallback(() => {\r\n    if (formValue.task.length >= 1) {\r\n      const action = {\r\n        type: \"add\",\r\n        payload: {\r\n          id: new Date().getTime(),\r\n          task: formValue.task,\r\n          status: \"pending\",\r\n          category: formValue.category,\r\n        },\r\n      };\r\n      dispatch(action);\r\n      resetInput();\r\n    }\r\n  }, [resetInput, dispatch, formValue])\r\n\r\n  return (\r\n    <Popup\r\n      trigger={<button className=\"addNewTask\"> + </button>}\r\n      modal\r\n      closeOnDocumentClick\r\n    >\r\n      {(close) => (\r\n        <div>\r\n          <h2 className=\"title-add\">Add New Task</h2>\r\n          <hr />\r\n          <form onSubmit={handleAddTask}>\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"task\"\r\n              type=\"text\"\r\n              placeholder=\"Buy something...\"\r\n              value={formValue.task}\r\n              autoComplete=\"false\"\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <select\r\n              onChange={handleInputChange}\r\n              name=\"category\"\r\n              value={formValue.category}\r\n              className=\"form-control mt-2\"\r\n              id=\"\"\r\n            >\r\n              <option value=\"normal\">Normal</option>\r\n              <option value=\"important\">Important</option>\r\n            </select>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-block mt-2\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                handleAddTask();\r\n                close();\r\n              }}\r\n            >\r\n              Agregar Tarea\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n})\r\n","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n  const [formValue, setState] = useState(initialState)\r\n  \r\n  const handleInputChange = ({target:input}) => {\r\n    setState({\r\n      ...formValue,\r\n      [input.name]: input.value\r\n    });\r\n  };\r\n\r\n  const resetInput = () => {\r\n    setState(initialState)\r\n  }\r\n  \r\n  return [formValue, handleInputChange, resetInput]\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { todoReducerContext } from \"../../hoc/todoReducerContext\";\r\nimport { TaskItem } from \"./TaskItem\";\r\nimport { AddNewTask } from \"./AddNewTask\";\r\n\r\nexport const TasksList = React.memo(() => {\r\n  \r\n  const { state, dispatch } = useContext(todoReducerContext);\r\n\r\n  return (\r\n    <>\r\n      {state.length >= 1 ? (\r\n        // Task Items\r\n        <ul className=\"container list-group list-group-flush p-0\">\r\n          {state.map((task) => (\r\n            <TaskItem key={task.id} task={{ ...task }} dispatch={dispatch} />\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        // Screen \"add your frist task\"\r\n        <div>\r\n          <img\r\n            className=\"img-resp mx-auto d-block\"\r\n            src=\"./assets/addnewtask.gif\"\r\n            alt=\"\"\r\n          />\r\n          <h4 className=\"first-task-title\">Add your first task</h4>\r\n        </div>\r\n      )}\r\n\r\n      <AddNewTask />\r\n    </>\r\n  );\r\n} \r\n)\r\n","export const todoReducer = (state=[], action) => {\r\n\r\n  switch (action?.type) {\r\n    case \"add\": // Add New Task\r\n      if(action.payload.category === \"important\"){\r\n        console.log('is important')\r\n        return [action.payload, ...state]\r\n      } else {\r\n        console.log('is normal')\r\n        return [...state, action.payload]\r\n      };\r\n    \r\n    case \"complete\": // Mark Pending or Complete Status Task\r\n      return state.map( todo => {\r\n        if(todo.id === action.payload){\r\n          switch(todo?.status){\r\n            case 'pending': \r\n              return {\r\n                ...todo,\r\n                status: 'complete'\r\n              }\r\n            case 'complete':\r\n              return {\r\n                ...todo,\r\n                status: 'pending'\r\n              }\r\n            default:\r\n              return todo\r\n          };\r\n        }else{\r\n          return todo\r\n        }\r\n      });\r\n\r\n    case \"delete\":  // Delete existing task\r\n      return state.filter( todo => todo.id !== action.payload);\r\n  \r\n    default:\r\n      return state\r\n  }\r\n\r\n}","import React, { useReducer, useEffect } from \"react\";\r\nimport { HeaderToDo } from \"./components/header/HeaderToDo\";\r\nimport { TasksList } from \"./components/tasks/TasksList\";\r\nimport { todoReducer } from \"./reducers/todoReducer\";\r\nimport { todoReducerContext } from \"./hoc/todoReducerContext\";\r\n\r\n// Valor inicial de mis todos\r\nconst init = () => {\r\n  return JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n};\r\n\r\nexport const TodoApp = () => {\r\n  const [state, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  // Render\r\n  return (\r\n    <>\r\n      <todoReducerContext.Provider value={{ state, dispatch }}>\r\n        <HeaderToDo />\r\n        <TasksList />\r\n      </todoReducerContext.Provider>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './TodoApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}